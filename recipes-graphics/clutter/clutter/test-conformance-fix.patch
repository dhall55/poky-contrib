Compiling conformance test leads running test-conformance target binary, and
gets failure in cross-compile environment. Introduce this commit from upstream
to fix it.

Signed-off-by: Zhai Edwin <edwin.zhai@intel.com>


commit 7fd6273c25569fe4f37ad371532d93e5170e51f7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Oct 11 16:16:45 2010 +0100

    tests: Generate the stub scripts using sed
    
    Instead of trying to run ./test-conformance with the -l option to
    generate a list of available tests it now runs sed on the
    test-conform-main.c file instead. Running the generated executable is
    a pain for cross-compiling so it would be nice to avoid it unless it's
    absolutely necessary. Although you could tell people who are cross
    compiling to just disable the conformance tests, this seems a shame
    because they could still be useful along with the wrappers for example
    if the cross compile is built to a shared network folder where the
    tests can be run on the actual device.
    
    The sed script is a little more ugly than it could be because it tries
    to avoid using the GNU extensions '\+' and '\|'.
    
    The script ends up placing restrictions on the format of the C file
    because the tests must all be listed on one line each. There is now a
    comment to explain this. Hopefully the trade off is worth it.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2363

Index: clutter-1.6.8/tests/conform/test-conform-main.c
===================================================================
--- clutter-1.6.8.orig/tests/conform/test-conform-main.c
+++ clutter-1.6.8/tests/conform/test-conform-main.c
@@ -201,6 +201,11 @@ main (int argc, char **argv)
   TEST_CONFORM_SIMPLE ("/script", test_state_base);
   TEST_CONFORM_SIMPLE ("/script", test_script_layout_property);
 
+  /* This file is run through a sed script during the make step so the
+     lines containing the tests need to be formatted on a single line
+     each. To comment out a test use the SKIP or TODO macros. Using
+     #if 0 would break the script. */
+
   TEST_CONFORM_SIMPLE ("/timeline", test_timeline);
   TEST_CONFORM_SKIP (!g_test_slow (), "/timeline", timeline_interpolation);
   TEST_CONFORM_SKIP (!g_test_slow (), "/timeline", timeline_rewind);
