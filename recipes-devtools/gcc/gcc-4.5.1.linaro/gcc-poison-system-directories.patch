       gcc/
       2008-07-02  Joseph Myers  <joseph@codesourcery.com>
       * c-incpath.c: Include toplev.h.
       (merge_include_chains): Use warning instead of cpp_error for
       system directory poisoning diagnostic.
       * Makefile.in (c-incpath.o): Depend on toplev.h.
       * gcc.c (LINK_COMMAND_SPEC): Pass
       --error-poison-system-directories if
       -Werror=poison-system-directories.

       2007-06-13  Joseph Myers  <joseph@codesourcery.com>
       * common.opt (--Wno-poison-system-directories): New.
       * doc/invoke.texi (-Wno-poison-system-directories): Document.
       * c-incpath.c: Include flags.h.
       (merge_include_chains): Check flag_poison_system_directories.
       * gcc.c (LINK_COMMAND_SPEC): Pass --no-poison-system-directories
       to linker if -Wno-poison-system-directories.
       * Makefile.in (c-incpath.o): Depend on $(FLAGS_H).

       2007-03-20  Daniel Jacobowitz  <dan@codesourcery.com>
                   Joseph Myers  <joseph@codesourcery.com>
       * configure.ac (--enable-poison-system-directories): New option.
       * configure, config.in: Regenerate.
       * c-incpath.c (merge_include_chains): If
       ENABLE_POISON_SYSTEM_DIRECTORIES defined, warn for use of
       /usr/include, /usr/local/include or /usr/X11R6/include.

Index: gcc-linaro-4.5-2010.11-1/gcc/config.in
===================================================================
--- gcc-linaro-4.5-2010.11-1.orig/gcc/config.in
+++ gcc-linaro-4.5-2010.11-1/gcc/config.in
@@ -138,6 +138,12 @@
 #endif
 
 
+/* Define to warn for use of native system header directories */
+#ifndef USED_FOR_TARGET
+#undef ENABLE_POISON_SYSTEM_DIRECTORIES
+#endif
+
+
 /* Define if you want all operations on RTL (the basic data structure of the
    optimizer and back end) to be checked for dynamic type safety at runtime.
    This is quite expensive. */
Index: gcc-linaro-4.5-2010.11-1/gcc/configure.ac
===================================================================
--- gcc-linaro-4.5-2010.11-1.orig/gcc/configure.ac
+++ gcc-linaro-4.5-2010.11-1/gcc/configure.ac
@@ -4449,6 +4449,16 @@ if test "x${enable_poison_system_directo
 	    [Define to warn for use of native system header directories])
 fi
 
+AC_ARG_ENABLE([poison-system-directories],
+             AS_HELP_STRING([--enable-poison-system-directories],
+                            [warn for use of native system header directories]),,
+             [enable_poison_system_directories=no])
+if test "x${enable_poison_system_directories}" = "xyes"; then
+  AC_DEFINE([ENABLE_POISON_SYSTEM_DIRECTORIES],
+           [1],
+           [Define to warn for use of native system header directories])
+fi
+
 # Substitute configuration variables
 AC_SUBST(subdirs)
 AC_SUBST(srcdir)
Index: gcc-linaro-4.5-2010.11-1/gcc/incpath.c
===================================================================
--- gcc-linaro-4.5-2010.11-1.orig/gcc/incpath.c
+++ gcc-linaro-4.5-2010.11-1/gcc/incpath.c
@@ -203,6 +203,24 @@ add_standard_paths (const char *sysroot,
 	  add_path (str, SYSTEM, p->cxx_aware, false);
 	}
     }
+
+#ifdef ENABLE_POISON_SYSTEM_DIRECTORIES
+  if (flag_poison_system_directories)
+    {
+       struct cpp_dir *p;
+
+       for (p = heads[QUOTE]; p; p = p->next)
+         {
+          if ((!strncmp (p->name, "/usr/include", 12))
+              || (!strncmp (p->name, "/usr/local/include", 18))
+              || (!strncmp (p->name, "/usr/X11R6/include", 18)))
+            warning (OPT_Wpoison_system_directories,
+                     "include location \"%s\" is unsafe for "
+                     "cross-compilation",
+                     p->name);
+         }
+    }
+#endif
 }
 
 /* For each duplicate path in chain HEAD, keep just the first one.
